name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Generate changelog
        id: changelog
        run: |
          echo "Generating release notes..."
          echo "## Changes in ${{ github.ref_name }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          
          # Get previous tag or use initial commit if no previous tags
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || git rev-list --max-parents=0 HEAD)
          
          if [ "$PREV_TAG" != "" ]; then
            echo "Changes since $PREV_TAG:" >> RELEASE_NOTES.md
            git log --pretty=format:"- %s" $PREV_TAG..HEAD >> RELEASE_NOTES.md
          else
            echo "Initial release" >> RELEASE_NOTES.md
            git log --pretty=format:"- %s" >> RELEASE_NOTES.md
          fi
          
          echo "" >> RELEASE_NOTES.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${{ github.ref_name }}" >> RELEASE_NOTES.md
          
          echo "Release notes generated successfully"

      - name: Create Release Archive
        run: |
          mkdir -p release
          cp vmware-cis-run-checks.ps1 release/
          cp README.md release/
          cp LICENSE release/
          cp -r docs release/ 2>/dev/null || true
          cp -r examples release/ 2>/dev/null || true
          tar -czf vmware-cis-run-checks-${{ github.ref_name }}.tar.gz -C release .
          zip -r vmware-cis-run-checks-${{ github.ref_name }}.zip release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE_NOTES.md
          files: |
            vmware-cis-run-checks-${{ github.ref_name }}.tar.gz
            vmware-cis-run-checks-${{ github.ref_name }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}